'use strict';

// routes/step_routes.js
var mongo = require('mongodb');
var user = "test";

module.exports = function (app, dbclient) {
  app.get('/jobs/:id/steps/count', function (req, res) {
    //get jobs steps count
    var where = { '_id': new mongo.ObjectID(req.params.id) };
    dbclient.db('peon').collection('job').aggregate([{ $match: where }, { $project: { count: { $size: "$steps" } } }]).toArray(function (err, result) {
      if (err) {
        res.status(501).send({ error: "Not able to process" });
      } else {
        res.status(200).send({ count: result[0].count });
      }
    });
  });
  app.get('/jobs/:id/steps', function (req, res) {
    //get jobs steps list
    var where = { '_id': new mongo.ObjectID(req.params.id) };
    dbclient.db('peon').collection('job').findOne(where, function (err, result) {
      if (err) {
        res.status(501).send({ error: "Not able to process" });
      } else {
        res.status(200).send(result.steps);
      }
    });
  });
};
//TODO
//errors handling
//user handling
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0ZXBfcm91dGVzLmpzIl0sIm5hbWVzIjpbIm1vbmdvIiwicmVxdWlyZSIsInVzZXIiLCJtb2R1bGUiLCJleHBvcnRzIiwiYXBwIiwiZGJjbGllbnQiLCJnZXQiLCJyZXEiLCJyZXMiLCJ3aGVyZSIsIk9iamVjdElEIiwicGFyYW1zIiwiaWQiLCJkYiIsImNvbGxlY3Rpb24iLCJhZ2dyZWdhdGUiLCIkbWF0Y2giLCIkcHJvamVjdCIsImNvdW50IiwiJHNpemUiLCJ0b0FycmF5IiwiZXJyIiwicmVzdWx0Iiwic3RhdHVzIiwic2VuZCIsImVycm9yIiwiZmluZE9uZSIsInN0ZXBzIl0sIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0EsSUFBSUEsUUFBUUMsUUFBUSxTQUFSLENBQVo7QUFDQSxJQUFNQyxPQUFPLE1BQWI7O0FBRUFDLE9BQU9DLE9BQVAsR0FBaUIsVUFBU0MsR0FBVCxFQUFjQyxRQUFkLEVBQXdCO0FBQ3ZDRCxNQUFJRSxHQUFKLENBQVEsdUJBQVIsRUFBaUMsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDN0M7QUFDQSxRQUFNQyxRQUFRLEVBQUUsT0FBTyxJQUFJVixNQUFNVyxRQUFWLENBQW1CSCxJQUFJSSxNQUFKLENBQVdDLEVBQTlCLENBQVQsRUFBZDtBQUNBUCxhQUFTUSxFQUFULENBQVksTUFBWixFQUFvQkMsVUFBcEIsQ0FBK0IsS0FBL0IsRUFBc0NDLFNBQXRDLENBQWdELENBQUMsRUFBQ0MsUUFBUVAsS0FBVCxFQUFELEVBQWtCLEVBQUNRLFVBQVUsRUFBQ0MsT0FBTyxFQUFFQyxPQUFPLFFBQVQsRUFBUixFQUFYLEVBQWxCLENBQWhELEVBQTRHQyxPQUE1RyxDQUFvSCxVQUFDQyxHQUFELEVBQU1DLE1BQU4sRUFBaUI7QUFDbkksVUFBSUQsR0FBSixFQUFTO0FBQ1BiLFlBQUllLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQixFQUFDQyxPQUFPLHFCQUFSLEVBQXJCO0FBQ0QsT0FGRCxNQUVPO0FBQ0xqQixZQUFJZSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUIsRUFBQ04sT0FBT0ksT0FBTyxDQUFQLEVBQVVKLEtBQWxCLEVBQXJCO0FBQ0Q7QUFDRixLQU5EO0FBT0QsR0FWRDtBQVdBZCxNQUFJRSxHQUFKLENBQVEsaUJBQVIsRUFBMkIsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDdkM7QUFDQSxRQUFNQyxRQUFRLEVBQUUsT0FBTyxJQUFJVixNQUFNVyxRQUFWLENBQW1CSCxJQUFJSSxNQUFKLENBQVdDLEVBQTlCLENBQVQsRUFBZDtBQUNBUCxhQUFTUSxFQUFULENBQVksTUFBWixFQUFvQkMsVUFBcEIsQ0FBK0IsS0FBL0IsRUFBc0NZLE9BQXRDLENBQThDakIsS0FBOUMsRUFBcUQsVUFBQ1ksR0FBRCxFQUFNQyxNQUFOLEVBQWlCO0FBQ3BFLFVBQUlELEdBQUosRUFBUztBQUNQYixZQUFJZSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUIsRUFBQ0MsT0FBTyxxQkFBUixFQUFyQjtBQUNELE9BRkQsTUFFTztBQUNMakIsWUFBSWUsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCRixPQUFPSyxLQUE1QjtBQUNEO0FBQ0YsS0FORDtBQU9ELEdBVkQ7QUFXRCxDQXZCRDtBQXdCQTtBQUNBO0FBQ0EiLCJmaWxlIjoic3RlcF9yb3V0ZXMuanMiLCJzb3VyY2VSb290IjoiRDovRmlsZXMvcGVvbi9hcHAvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gcm91dGVzL3N0ZXBfcm91dGVzLmpzXHJcbnZhciBtb25nbyA9IHJlcXVpcmUoJ21vbmdvZGInKTtcclxuY29uc3QgdXNlciA9IFwidGVzdFwiO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihhcHAsIGRiY2xpZW50KSB7XHJcbiAgYXBwLmdldCgnL2pvYnMvOmlkL3N0ZXBzL2NvdW50JywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICAvL2dldCBqb2JzIHN0ZXBzIGNvdW50XHJcbiAgICBjb25zdCB3aGVyZSA9IHsgJ19pZCc6IG5ldyBtb25nby5PYmplY3RJRChyZXEucGFyYW1zLmlkKSB9O1xyXG4gICAgZGJjbGllbnQuZGIoJ3Blb24nKS5jb2xsZWN0aW9uKCdqb2InKS5hZ2dyZWdhdGUoW3skbWF0Y2g6IHdoZXJlfSwgeyRwcm9qZWN0OiB7Y291bnQ6IHsgJHNpemU6IFwiJHN0ZXBzXCJ9fX1dKS50b0FycmF5KChlcnIsIHJlc3VsdCkgPT4ge1xyXG4gICAgICBpZiAoZXJyKSB7XHJcbiAgICAgICAgcmVzLnN0YXR1cyg1MDEpLnNlbmQoe2Vycm9yOiBcIk5vdCBhYmxlIHRvIHByb2Nlc3NcIn0pO1xyXG4gICAgICB9IGVsc2UgeyAgICAgICAgXHJcbiAgICAgICAgcmVzLnN0YXR1cygyMDApLnNlbmQoe2NvdW50OiByZXN1bHRbMF0uY291bnR9KTtcclxuICAgICAgfSBcclxuICAgIH0pO1xyXG4gIH0pO1xyXG4gIGFwcC5nZXQoJy9qb2JzLzppZC9zdGVwcycsIChyZXEsIHJlcykgPT4ge1xyXG4gICAgLy9nZXQgam9icyBzdGVwcyBsaXN0XHJcbiAgICBjb25zdCB3aGVyZSA9IHsgJ19pZCc6IG5ldyBtb25nby5PYmplY3RJRChyZXEucGFyYW1zLmlkKSB9O1xyXG4gICAgZGJjbGllbnQuZGIoJ3Blb24nKS5jb2xsZWN0aW9uKCdqb2InKS5maW5kT25lKHdoZXJlLCAoZXJyLCByZXN1bHQpID0+IHtcclxuICAgICAgaWYgKGVycikge1xyXG4gICAgICAgIHJlcy5zdGF0dXMoNTAxKS5zZW5kKHtlcnJvcjogXCJOb3QgYWJsZSB0byBwcm9jZXNzXCJ9KTtcclxuICAgICAgfSBlbHNlIHsgICAgICAgIFxyXG4gICAgICAgIHJlcy5zdGF0dXMoMjAwKS5zZW5kKHJlc3VsdC5zdGVwcyk7XHJcbiAgICAgIH0gXHJcbiAgICB9KTtcclxuICB9KTsgIFxyXG59O1xyXG4vL1RPRE9cclxuLy9lcnJvcnMgaGFuZGxpbmdcclxuLy91c2VyIGhhbmRsaW5nIl19